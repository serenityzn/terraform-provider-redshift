package redshift

import (
	"regexp"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
)

var reservedWords = []string{
	"aes128",
	"aes256",
	"all",
	"allowoverwrite",
	"analyse",
	"analyze",
	"and",
	"any",
	"array",
	"as",
	"asc",
	"authorization",
	"az64",
	"backup",
	"between",
	"binary",
	"blanksasnull",
	"both",
	"bytedict",
	"bzip2",
	"case",
	"cast",
	"check",
	"collate",
	"column",
	"constraint",
	"create",
	"credentials",
	"cross",
	"current_date",
	"current_time",
	"current_timestamp",
	"current_user",
	"current_user_id",
	"default",
	"deferrable",
	"deflate",
	"defrag",
	"delta",
	"delta32k",
	"desc",
	"disable",
	"distinct",
	"do",
	"drop",
	"else",
	"emptyasnull",
	"enable",
	"encode",
	"encrypt     ",
	"encryption",
	"end",
	"except",
	"explicit",
	"false",
	"for",
	"foreign",
	"freeze",
	"from",
	"full",
	"globaldict256",
	"globaldict64k",
	"grant",
	"group",
	"gzip",
	"having",
	"identity",
	"ignore",
	"ilike",
	"in",
	"initially",
	"inner",
	"intersect",
	"into",
	"is",
	"isnull",
	"join",
	"language",
	"leading",
	"left",
	"like",
	"limit",
	"localtime",
	"localtimestamp",
	"lun",
	"luns",
	"lzo",
	"lzop",
	"minus",
	"mostly16",
	"mostly32",
	"mostly8",
	"natural",
	"new",
	"not",
	"notnull",
	"null",
	"nulls",
	"off",
	"offline",
	"offset",
	"oid",
	"old",
	"on",
	"only",
	"open",
	"or",
	"order",
	"outer",
	"overlaps",
	"parallel",
	"partition",
	"percent",
	"permissions",
	"placing",
	"primary",
	"raw",
	"readratio",
	"recover",
	"references",
	"respect",
	"rejectlog",
	"resort",
	"restore",
	"right",
	"rule",
	"select",
	"session_user",
	"similar",
	"snapshot ",
	"some",
	"sysdate",
	"system",
	"table",
	"tag",
	"tdes",
	"text255",
	"text32k",
	"then",
	"timestamp",
	"to",
	"top",
	"trailing",
	"trigger",
	"true",
	"truncatecolumns",
	"union",
	"unique",
	"user",
	"using",
	"verbose",
	"wallet",
	"when",
	"where",
	"with",
	"without",
}

var dbGroupAcceptableCharacters = regexp.MustCompile("[a-z1-9_+.@-]{1,64}")
var startsWithLetter = regexp.MustCompile("[a-zA-Z].*")

// Validation rules are specified at https://docs.aws.amazon.com/redshift/latest/APIReference/API_GetClusterCredentials.html
// admittedly, some of these are a bit redundant
var dbGroupValidate = validation.All(
	validation.StringLenBetween(1, 64),
	validation.StringMatch(dbGroupAcceptableCharacters, "Must contain only lowercase letters, numbers, underscore, plus sign, period (dot), at symbol (@), or hyphen."),
	validation.StringMatch(startsWithLetter, "First character must be a letter."),
	validation.StringDoesNotContainAny(":/"),
	validation.StringNotInSlice(reservedWords, true),
)

var awsAccountIdRegexp = regexp.MustCompile(`^\d{12}$`)
var uuidRegex = regexp.MustCompile("^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$")
